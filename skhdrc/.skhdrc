## Open applications using bindings
cmd + alt - t : open -a /Applications/Utilities/Terminal.app/
cmd + alt - s : open -a /Applications/Slack.app/
cmd + alt - m : open -a /Applications/Spark.app/
cmd + alt - b: open -a /Applications/Safari.app/

## Action bindings 
# Turn on or off chunkwm
ctrl + alt + cmd - p : brew services stop chunkwm
ctrl + alt + cmd - o : brew services start chunkwm

# take capture window screenshot using the default keyboard shortcut 
cmd + shift - 4 : screencapture -t jpg -i ~/Desktop/screenshot-`date "+%Y-%m-%d-%H:%M:%S"`.jpg

# Movement settings
# swap window
ctrl - h : chunkc tiling::window --swap west
ctrl - j : chunkc tiling::window --swap south
ctrl - k : chunkc tiling::window --swap north
ctrl - l : chunkc tiling::window --swap east

ctrl - u : chunkc tiling::window --send-to-desktop 1; chunkc tiling::monitor -f 1
ctrl - i : chunkc tiling::window --send-to-desktop 2; chunkc tiling::monitor -f 2
# ctrl + shift - o : chunkc tiling::window --send-to-desktop 3; chunkc tiling::monitor -f 3


## Focus settings
# Focus windows on active screen
alt - h : chunkc tiling::window --focus west
alt - j : chunkc tiling::window --focus south
alt - k : chunkc tiling::window --focus north
alt - l : chunkc tiling::window --focus east

# Focus on another screen
alt - u  : chunkc tiling::monitor -f 1
alt - i  : chunkc tiling::monitor -f 2
# ctrl + alt - o  : chunkc tiling::monitor -f 3

## Region size adjustment settings
# toggle window fullscreen
alt - f : chunkc tiling::window --toggle fullscreen

# toggle desktop offset
alt - a : chunkc tiling::desktop --toggle offset

# toggle window parent zoom
# alt - d : chunkc tiling::window --toggle parent

# toggle window split type
alt - s : chunkc tiling::window --toggle split

# equalize size of windows
ctrl + alt - s : chunkc tiling::desktop --equalize

# float / unfloat window and center on screen
alt - x : chunkc tiling::window --toggle float;\
          chunkc tiling::window --grid-layout 2560:1600:400:480:900:1600;\
	  rm /tmp/float_sav

# increase region size
alt + shift - h : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
alt + shift - j : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
alt + shift - k : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
alt + shift - l : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east

# decrease region size
ctrl + alt + shift - l : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
ctrl + alt + shift - k : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
ctrl + alt + shift - j : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
ctrl + alt + shift - h : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east

# Move floating window
# Got this from: https://github.com/koekeishiya/chunkwm/wiki/Useful-tips-and-workarounds#moving-floating-windows
# deal with floating windows! (this is a bash workaround)
ctrl + alt - h : ~/.config/chunkwm/chunk_float.sh move -x
ctrl + alt - l : ~/.config/chunkwm/chunk_float.sh move +x
ctrl + alt - k : ~/.config/chunkwm/chunk_float.sh move -y
ctrl + alt - j : ~/.config/chunkwm/chunk_float.sh move +y

# Increase floating windows size
ctrl + shift - k : ~/.config/chunkwm/chunk_float.sh dilate + n 50
ctrl + shift - j : ~/.config/chunkwm/chunk_float.sh dilate - n 50
ctrl + shift - h : ~/.config/chunkwm/chunk_float.sh dilate + w 50
ctrl + shift - l : ~/.config/chunkwm/chunk_float.sh dilate - w 50


# Defaults for example usage below

#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command>
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
# :: default : chunkc border::color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : chunkc border::color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     "qutebrowser" : echo "hello qutebrowser"
#     "finder"      : false
# ]

# open terminal, blazingly fast compared to iTerm/Hyper

# open qutebrowser
# cmd + shift - return : ~/Scripts/qtb.sh

# open mpv
# cmd - m : open -na /Applications/mpv.app $(pbpaste)



# cmd - j : chunkc tiling::window --focus prev
# cmd - k : chunkc tiling::window --focus next

# move window
# shift + cmd - h : chunkc tiling::window --warp west
# shift + cmd - j : chunkc tiling::window --warp south
# shift + cmd - k : chunkc tiling::window --warp north
# shift + cmd - l : chunkc tiling::window --warp east

# make floating window fill screen
# shift + alt - up     : chunkc tiling::window --grid-layout 1:1:0:0:1:1

# make floating window fill left-half of screen
# shift + alt - left   : chunkc tiling::window --grid-layout 1:2:0:0:1:1

# make floating window fill right-half of screen
# shift + alt - right  : chunkc tiling::window --grid-layout 1:2:1:0:1:1

# create desktop, move window and follow focus
# shift + cmd - n : chunkc tiling::desktop --create;\
                  # id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
                  # chunkc tiling::window --send-to-desktop $(echo ${id##* });\
                  # chunkc tiling::desktop --focus $(echo ${id##* })

# create desktop and follow focus
# cmd + alt - n : chunkc tiling::desktop --create;\
                # id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
                # chunkc tiling::desktop --focus $(echo ${id##* })
# destroy desktop
# cmd + alt - w : chunkc tiling::desktop --annihilate

# fast focus desktop
# cmd + alt - l : chunkc tiling::desktop --focus next
# cmd + alt - h : chunkc tiling::desktop --focus prev
# cmd + alt - x : chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
# cmd + alt - z : chunkc tiling::desktop --focus prev
# cmd + alt - c : chunkc tiling::desktop --focus next
# cmd + alt - 1 : chunkc tiling::desktop --focus 1
# cmd + alt - 2 : chunkc tiling::desktop --focus 2
# cmd + alt - 3 : chunkc tiling::desktop --focus 3
# cmd + alt - 4 : chunkc tiling::desktop --focus 4
# cmd + alt - 5 : chunkc tiling::desktop --focus 5
# cmd + alt - 6 : chunkc tiling::desktop --focus 6
# cmd + alt - 7 : chunkc tiling::desktop --focus 7

# send window to desktop
# shift + alt - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop)
# shift + alt - z : chunkc tiling::window --send-to-desktop prev
# shift + alt - c : chunkc tiling::window --send-to-desktop next
# shift + alt - 1 : chunkc tiling::window --send-to-desktop 1
# shift + alt - 2 : chunkc tiling::window --send-to-desktop 2
# shift + alt - 3 : chunkc tiling::window --send-to-desktop 3
# shift + alt - 4 : chunkc tiling::window --send-to-desktop 4
# shift + alt - 5 : chunkc tiling::window --send-to-desktop 5
# shift + alt - 6 : chunkc tiling::window --send-to-desktop 6
# shift + alt - 7 : chunkc tiling::window --send-to-desktop 7

# send window to desktop and follow focus
# shift + cmd - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop); chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
# ctrl - l : chunkc tiling::window --send-to-desktop prev; chunkc tiling::desktop --focus prev
# ctrl - h : chunkc tiling::window --send-to-desktop next; chunkc tiling::desktop --focus next
# ctrl - h : chunkc tiling::window --send-to-desktop 1; chunkc tiling::desktop --focus 1
#
#
# ctrl - l : chunkc tiling::window --send-to-desktop 2; chunkc tiling::desktop --focus 2
# ctrl - h : chunkc tiling::window --send-to-desktop 3; chunkc tiling::desktop --focus 3
# shift + cmd - 4 : chunkc tiling::window --send-to-desktop 4; chunkc tiling::desktop --focus 4
# shift + cmd - 5 : chunkc tiling::window --send-to-desktop 5; chunkc tiling::desktop --focus 5
# shift + cmd - 6 : chunkc tiling::window --send-to-desktop 6; chunkc tiling::desktop --focus 6
# shift + cmd - 7 : chunkc tiling::window --send-to-desktop 7; chunkc tiling::desktop --focus 7

# focus monitor
# ctrl - k  : chunkc tiling::monitor -f prev
# alt - j  : chunkc tiling::monitor -f next
# ctrl + alt - u : chunkc tiling::window --send-to-desktop 2; chunkc tiling::monitor -f 2
# ctrl + alt - o : chunkc tiling::window --send-to-desktop 3; chunkc tiling::monitor -f 3

# send window to monitor and follow focus
# ctrl + cmd - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
# ctrl + cmd - c  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
# ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
# ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
# ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3


# set insertion point for focused container
# ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
# ctrl + alt - h : chunkc tiling::window --use-insertion-point west
# ctrl + alt - j : chunkc tiling::window --use-insertion-point south
# ctrl + alt - k : chunkc tiling::window --use-insertion-point north
# ctrl + alt - l : chunkc tiling::window --use-insertion-point east

# rotate tree
# alt - r : chunkc tiling::desktop --rotate 90

# mirror tree y-axis
# alt - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
# alt - x : chunkc tiling::desktop --mirror horizontal


# toggle sticky
# alt - e : chunkc tiling::window --toggle sticky

# toggle sticky, float and resize to picture-in-picture size
# alt - p : chunkc tiling::window --toggle sticky;\
          # chunkc tiling::window --grid-layout 5:5:4:0:1:1

# float next window to be tiled
# shift + alt - t : chunkc set window_float_next 1

# change layout of desktop
# shift + alt - a : chunkc tiling::desktop --layout bsp
# shift + alt - s : chunkc tiling::desktop --layout monocle
# shift + alt - d : chunkc tiling::desktop --layout float
